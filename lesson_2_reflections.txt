What happens when you initialize a repository? Why do you need to do it?

    Git init creates a .gid directory which will be used to store history information.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

    The staging area is used to prepare for the next commit. Working directory is the place
    used to store current version of files, and the repository contains all of the history
    information of tracked files.

How can you use the staging area to make sure you have one commit per logical
change?

    We can check git diff to make sure we have one commit per logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

    Branches would be useful for a group of programmers to work on the same program.

How do the diagrams help you visualize the branch structure?

    We can easily identify the branch stracture from the diagrams.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

    The merge combines the changes made in two branches to create a new commit.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

    Automatic merging make the merge task easy but may end in unintended results.
